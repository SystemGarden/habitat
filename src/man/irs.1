.TH "irs" "1" "2.0" "Nigel Stuckey" "Habitat"
.SH "NAME"
.LP 
irs \- command line interface to Ringstore storage
.SH "SYNTAX"
.LP 
irs [\fI\-c <purl>\fP] [\fI\-C <cfcmd>\fP] 
[\fI\-e <fmt>\fP] [\fI\-dDhv\fP] [file [ring [dur]]]
.SH "DESCRIPTION"
.LP 
A Ringstore is a type of storage system designed to hold 
\fBFat Headed Arrays\fR (FHA) in time series.
It is the primary method of storing data locally on a machine 
in Habitat. 

The command can be run with optional \fIfile\fR, \fIring\fR 
and \fIdur\fR arguments for names of the Ringstore file, 
the time series ring and its duration.
Alternatively, these can be specified with the 
commands '\fBfile\fR', '\fBring\fR' and '\fBduration\fR'
once \fBirs\fR has started.

The prompt will contain the current file and ring name with duration.
.SH "OPTIONS"
.LP 
.TP 
\fB\-c\fR \fI<purl>\fP
Append user configuration data from the route <purl>, rather than 
the default file ~/.habrc.
.TP 
\fB\-C\fR \fI<cfcmd>\fP
Append a list of configuration directives from <cfcmd>, separated 
by semicolons.
.TP 
\fB\-d\fR
Place \fBghabitat\fR in diagnositc mode, giving an additional 
level of logging and sending the text to stderr rather than the 
default or configured destinations.
In daemon mode, will send output to the controlling terminal.
.TP 
\fB\-D\fR
Place \fBghabitat\fR in debug mode. 
As \-d above but generating a great deal more information, designed to be 
used in conjunction with the source code. 
Also overrides normal outputs and will send the text to stderr.
In daemon mode, will send output to the controlling terminal.
.TP 
\fB\-e\fR \fI<fmt>\fP
Change the logging output to one of eight preset alternative formats, 
some showing additional information.
<fmt> must be 0\-7.
See LOGGING below.
.TP 
\fB\-h\fR
Print a help message to stdout and exit
.TP 
\fB\-v\fR
Print the version to stdout and exit
.SH "COMMANDS"
.LP 
The following commands are accepted:\-
.TP 
! <cmd>     sh <cmd>
Run \fI<cmd>\fR in a shell (see \fBchsh\fR(1) for your shell choice)
.TP 
? [<cmd>]   help [<cmd>]
Without \fI<cmd>\fR, print a tabular list of commands.
Otherwise print an explanation and usage of \fI<cmd>\fR
.TP 
bye   exit   e   quit   q
All of the above commands will exit \fBirs\fR
.TP 
close
Closes the currently open file and ring
.TP 
create <file> <perm> <ring> <lname> <desc> <nslots> <dur>
Create a new time series ring, where
.br 
<file>   name of holstore file to contain the ring
.br 
<perm>   file permissions (eg 0644)
.br 
<ring>   name of ringstore ring
.br 
<lname>  long name of ring
.br 
<desc>   text description of ring
.br 
<nslots> number of slots in ring, 0 for unlimitied
.br 
<dur>    secs duration of each sample, 0 for irregular
.TP 
duration <dur>   dur <dur>
Open the ring using the previously specified ring name in 
the currently open file. 
The duration should be a positive integer, which represents 
the length in seconds of each sample.
Alternatively, it may be 0 to represent an irregular interval.
.TP 
footprint
Print the current Ringstore file size
.TP 
get
Get the next table in the time series.
You should have an open file and ring
.TP 
getall
Get all the tables in the series and print as a single table with
the following columns:\-
.br 
_seq   sequence number
.br 
_time  time
.br 
_dur   duration
.TP 
goto <seq>   jumpto <seq>
Goto a specific sequence number \fI<seq>\fR in the time series.
The next call to \fBget\fR will print that table
.TP 
jump <nseq>
If \fI<nseq>\fR is positive, move forward \fI<nseq>\fR 
places in the time series.
If negative, move backwards.
.TP 
ls   lsrings
List the rings available in the current file
.TP 
mget <nseq>
Return data from the next \fI<nseq>\fR sequences and advance 
to the next unread sequence.
The data is printed as a single table with the following 
columns.
.br 
_seq   sequence number
.br 
_time  time
.br 
_dur   duration
.TP 
open <file> [<ring> [ <password> ] ]
Open a Ringstore file and optionally a time sries ring.
If \fI<ring>\fR is not specified, then it can be specified 
with '\fBring\fR' afterwards (also see \fBlsring\fR).
\fI<password>\fR is not currently supported.
.TP 
purge <nseq>
Remove the oldest <nseq> sequences from the time series.
If more are removed that are present in the current ring, then 
this effectively empties the ring
.TP 
put
Appends a new table to the end of the time series, which will
be read from \fBstdin\fR (the keyboard or input pipe).
Does not alter the current sequence to next read.
.TP 
remain
Prints the amount of space free in the filesystem that houses
the currently open Ringstore file.
.TP 
resize
Change the number of sequence slots in the current time 
series ring
.TP 
ring <rname>
Change the current time series ring to be \fI<rname>\fR.
This will close any previously open ring but
will not affect the current file.
\fI<rname>\fR must exist in the current file.
.TP 
rm
Remove the current ring.
You will be prompted to confirm the action to prevent
accidental eraseure.
.TP 
rs <info>
Show the underlying ringstore structure in the form of tables.
The secondary argument is needed to show the table as follows:\-
.br 
s | superblock   superblock
.br 
r | rings        ring directory
.br 
h | headers      header hash table
.br 
i | index        record index
.TP 
stat
Print statisticas about the current file and ring
.SH "FILES"
.LP 
Locations alter depending on how the application is installed.
.TP 
For the habitat configuration
\fI~/.habrc\fP
.br 
\fI$HAB/etc/habitat.conf\fP or \fB/etc/habitat.conf\fR
.TP 
For the help information
\fB$HAB/lib/help/\fR or \fB/usr/lib/habitat/help/\fR
.SH "ENVIRONMENT VARIABLES"
.TP 
\fBHOME\fP
User's home directory
.SH "AUTHORS"
.LP 
Nigel Stuckey <nigel.stuckey@systemgarden.com>
.SH "SEE ALSO"
.LP 
clockwork(8), killclock(8), statclock(8), habedit(8), habrep(8),
habconf(5),
myhabitat(1), habget(1), habput(1), habprobe(1), habmeth(1)
